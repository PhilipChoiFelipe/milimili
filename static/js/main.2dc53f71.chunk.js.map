{"version":3,"sources":["SignUpForm.js","WriteComment.js","CommentList.js","ChosenDiary.js","OwnChosenDiary.js","SavedDiaries.js","WriteDiary.js","OthersDiaries.js","App.js","serviceWorker.js","index.js"],"names":["SignUpForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","email","undefined","password","dropdownOpen","handle","signUpmodal","signInmodal","toggle","bind","assertThisInitialized","modalToggle","InmodalToggle","event","field","target","name","value","changes","setState","preventDefault","alert","signUpCallback","signInCallback","currentTarget","textContent","prevState","btnName","_this2","react_default","a","createElement","className","onClick","id","Modal","isOpen","ModalHeader","ModalBody","htmlFor","placeholder","type","onChange","e","handleChange","handleSignIn","Dropdown","buttonChange","DropdownToggle","caret","color","DropdownMenu","DropdownItem","handleType","handleSignUp","Component","WriteComment","updateComment","comment","onCommentSubmit","length","getRandomColor","firebase","database","ref","child","diary","key","on","snapshot","val","exists","userID","currentUser","uid","newComment","text","time","ServerValue","TIMESTAMP","displayName","diariesObject","keyValue","commentsKeys","keys","map","commentsObj","_","isEmpty","unique","filter","v","i","indexOf","index","splice","indexOwner","notifyCommentUser","push","notifyUser","letters","split","Math","floor","random","onSubmit","rows","cols","style","height","CommentList","removeComment","commentKey","window","confirm","remove","comments","pageCount","_this3","content","commentObj","object","CommentList_SingleComment","width","maxHeight","overflow","SingleComment","_this4","button","backgroundColor","ChosenDiary","sharedRemovedHanler","removeMySharedDiary","redirect","match","params","keySeconds","location","reload","body","title","src_WriteComment","src_CommentList","OwnChosenDiary","submitHandler","removeDiary","savedHandler","shareDiary","set","SavedDiaries","clickedDiary","tag","data","diaries","count","round","date","Redirect","to","pathname","lib","minSize","maxSize","tags","handleClick","shuffle","WriteDiary","handleSubmit","Date","textValue","textUpdate","getMilliseconds","titleChange","size","fontSize","OthersDiaries","sharedDiaries","shared","App","concat","newData","commenterID","writerID","commentText","diaryKey","userList","user","clickUpdate","clickLogIn","clickedLogIn","notification","commentNotification","authUnRegFunc","auth","onAuthStateChanged","firebaseUser","diariesObj","sharedObject","sharedObj","notifyObject","notifyKeys","commentObject","notifyObj","errorMessage","createUserWithEmailAndPassword","then","sendEmailVerification","updateProfile","catch","err","message","signInWithEmailAndPassword","error","_this5","signOut","_this6","App_Notification","App_CommentNotification","handleSignOut","Link","HashRouter","Navbar","Nav","NavItem","Switch","Route","exact","path","render","src_WriteDiary","src_SavedDiaries","src_OthersDiaries","src_ChosenDiary","assign","src_OwnChosenDiary","textAlign","src_SignUpForm","Notification","_this7","handleNotification","createNotification","parameter","_this8","NotificationManager","info","clickedNotification","href","includes","borderRadius","react_notifications_lib","CommentNotification","_this9","_this10","Boolean","hostname","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","src_App_1","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2dc53f71.chunk.js","sourcesContent":["import React, { Component } from 'react'; //import React Component\n\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\n\n\nclass SignUpForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'email': undefined,\n      'password': undefined,\n      // anonymous: false,\n      dropdownOpen: false,\n      handle: 'select',\n      signUpmodal: false,\n      signInmodal: false\n    };\n    this.toggle = this.toggle.bind(this)\n    this.modalToggle = this.modalToggle.bind(this);\n    this.InmodalToggle = this.InmodalToggle.bind(this);\n  }\n\n  //update state for specific field\n  handleChange(event) {\n    let field = event.target.name;\n    let value = event.target.value;\n\n    let changes = {};\n    changes[field] = value;\n    this.setState(changes);\n  }\n\n  // signUp button\n  handleSignUp(event) {\n    event.preventDefault();\n    if (this.state.handle === 'select') {\n      alert(\"신분을 정해주세요!\")\n    } else {\n      this.props.signUpCallback(this.state.email, this.state.password, this.state.handle);\n    }\n  }\n\n  //handle signIn button\n  handleSignIn(event) {\n    event.preventDefault();\n    this.props.signInCallback(this.state.email, this.state.password);\n  }\n\n  handleType(event) {\n    // console.log(event.currentTarget.textContent)\n    this.setState({ handle: event.currentTarget.textContent });\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  InmodalToggle() {\n    this.setState({\n      signInmodal: !this.state.signInmodal\n    })\n  }\n\n  modalToggle() {\n    this.setState({\n      signUpmodal: !this.state.signUpmodal\n    });\n  }\n\n  buttonChange(event) {\n    this.setState({ btnName: \"hi\" })\n  }\n\n  // handleAnonymous(event) {\n  //   event.preventDefault();\n  //   this.setState({anonymous: true})\n  //   this.props.handleAnonymous(this.state.anonymous)\n  // }\n\n  render() {\n    return (\n      <form>\n        {/* email field */}\n        {/* <div className=\"form-group\">\n          <label htmlFor=\"email\">아이디</label>\n          <input className=\"form-control\" placeholder=\"이메일형식\" id=\"email\" type=\"email\" name=\"email\" onChange={(e) => this.handleChange(e)} />\n        </div> */}\n\n        {/* password field*/}\n        {/* <div className=\"form-group\">\n          <label htmlFor=\"password\">비밀번호</label>\n          <input className=\"form-control\" id=\"password\" type=\"password\" name=\"password\" onChange={(e) => this.handleChange(e)} />\n        </div> */}\n\n        {/* sign up and sign in */}\n        <div className=\"form-group text-center mt-5\">\n          <button  className=\"btn\" onClick={this.InmodalToggle}>로그인</button>\n          <button id=\"signupButton\" className=\"btn ml-4\" onClick={this.modalToggle}>회원가입</button>\n\n          <Modal isOpen={this.state.signInmodal} toggle={this.InmodalToggle} className=\"modal-dialog-centered\">\n            <ModalHeader toggle={this.InmodalToggle}>MiliMili</ModalHeader>\n            <ModalBody>\n              <form>\n                {/* email field */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">아이디</label>\n                  <input className=\"form-control\" placeholder=\"이메일형식\" id=\"email\" type=\"email\" name=\"email\" onChange={(e) => this.handleChange(e)} />\n                </div>\n\n                {/* password field*/}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">비밀번호</label>\n                  <input className=\"form-control\" id=\"password\" type=\"password\" name=\"password\" onChange={(e) => this.handleChange(e)} />\n                </div>\n\n                <div className=\"form-group text-right\">\n                  <button className=\"btn btn-primary\" onClick={(e) => this.handleSignIn(e)}>로그인</button>\n                </div>\n              </form>\n            </ModalBody>\n            {/* <ModalFooter> */}\n            {/* <Button color=\"primary\" onClick={this.modalToggle}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.modalToggle}>Cancel</Button>\n          </ModalFooter> */}\n          </Modal>\n          {/* ------------------------------------------------------------------------------------------------ */}\n          <Modal isOpen={this.state.signUpmodal} toggle={this.modalToggle} className=\"modal-dialog-centered\">\n            <ModalHeader toggle={this.modalToggle}>MiliMili</ModalHeader>\n            <ModalBody>\n              <form>\n                {/* email field */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">아이디</label>\n                  <input className=\"form-control\" placeholder=\"이메일형식\" id=\"email\" type=\"email\" name=\"email\" onChange={(e) => this.handleChange(e)} />\n                </div>\n\n                {/* password field*/}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">비밀번호</label>\n                  <input className=\"form-control\" id=\"password\" type=\"password\" name=\"password\" onChange={(e) => this.handleChange(e)} />\n                </div>\n\n                <div className=\"form-group text-right\">\n                  <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle} className=\"d-inline mr-2\"\n                    onChange={this.buttonChange}>\n                    <DropdownToggle caret color=\"primary\" >\n                      {this.state.handle}\n                    </DropdownToggle>\n                    <DropdownMenu>\n                      {/* <DropdownItem header>Header</DropdownItem> */}\n                      <DropdownItem onClick={(e) => this.handleType(e)}>미필</DropdownItem>\n                      {/* <DropdownItem disabled>Action (disabled)</DropdownItem>\n              <DropdownItem divider /> */}\n                      <DropdownItem onClick={(e) => this.handleType(e)}>현역</DropdownItem>\n                      <DropdownItem onClick={(e) => this.handleType(e)}>전역</DropdownItem>\n                      <DropdownItem onClick={(e) => this.handleType(e)}>others</DropdownItem>\n                    </DropdownMenu>\n                  </Dropdown>\n                  <button id=\"signupButton1\" className=\"btn btn-primary\" onClick={(e) => this.handleSignUp(e)}>회원가입</button>\n                </div>\n              </form>\n            </ModalBody>\n            {/* <ModalFooter> */}\n            {/* <Button color=\"primary\" onClick={this.modalToggle}>Do Something</Button>{' '}\n            <Button color=\"secondary\" onClick={this.modalToggle}>Cancel</Button>\n          </ModalFooter> */}\n          </Modal>\n          {/* <button className = \"btn\" onClick={(e) => this.handleAnonymous(e)}>비회원</button> */}\n        </div>\n      </form>\n    )\n  }\n}\n\n\n\nexport default SignUpForm\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport _ from 'lodash';\n\n\nclass WriteComment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: ''\n    }\n    this.updateComment = this.updateComment.bind(this)\n  }\n\n  updateComment = (event) => {\n    event.preventDefault();\n    this.setState({ comment: event.target.value });\n  }\n\n  getRandomColor() {\n    var letters = 'BCDEF'.split('');\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * letters.length)];\n    }\n    return color;\n  }\n\n  onCommentSubmit = (e) => {\n    e.preventDefault(); //don't submit\n    /* TODO: add a new Chirp to the database */\n    // let propsUser = this.props.currentUser;\n    if (this.state.comment.length === 0) {\n      alert(\"댓글을 적어주세요!\")\n    } else if (this.state.comment.length > 350) {\n      alert(\"댓글은 350자 이내로 써주세요!\")\n    } else {\n      let color = this.getRandomColor();\n      firebase.database().ref(`shared/diaries/`).child(this.props.diary.key).child(\"comments\").on(\"value\", (snapshot) => {\n        for (let key in snapshot.val()) {\n          if (snapshot.exists && snapshot.val()[key].userID === this.props.currentUser.uid) {\n            color = snapshot.val()[key].color\n            // console.log(color);\n          }\n        }\n      })\n      let newComment = {\n        userID: this.props.currentUser.uid,\n        text: this.state.comment,\n        time: firebase.database.ServerValue.TIMESTAMP,\n        color: color,\n        displayName: this.props.currentUser.displayName\n      }\n      //   console.log(\"commentsubmitted\")\n      //   console.log(this.state.comment)\n      // console.log(this.props.diary)\n      let diariesObject = {};\n      firebase.database().ref(`shared/diaries/`).child(this.props.keyValue).child(\"comments\").on(\"value\", (snapshot) => {\n        if(snapshot.exists()){\n        let commentsKeys = Object.keys(snapshot.val())\n        diariesObject = commentsKeys.map((key) => {\n          let commentsObj = {}\n          if (key !== 'notification') {\n            commentsObj = snapshot.val()[key].userID;\n            // console.log(key)\n            // commentsObj.id = key;\n          }\n          return commentsObj;\n        })\n      }\n      })\n      // _.uniq(diariesObject)\n      // console.log(_.isEmpty(diariesObject))\n      if (!_.isEmpty(diariesObject)) {\n        let unique = diariesObject.filter((v, i, a) => a.indexOf(v) === i);\n        let index = unique.indexOf(this.props.currentUser.uid)\n        if (index !== -1) {\n          unique.splice(index, 1)\n        };\n        let indexOwner = unique.indexOf(this.props.diary.userID)\n        if (indexOwner !== -1) {\n          unique.splice(indexOwner, 1)\n        };\n        this.props.notifyCommentUser(unique, this.props.diary, this.props.keyValue)\n      }\n      firebase.database().ref(`shared/diaries/`).child(this.props.diary.key).child(\"comments\").push(newComment)\n      this.setState({ comment: '' }); //empty out post for next time\n      if (newComment.userID !== this.props.diary.userID) {\n        this.props.notifyUser(newComment, this.props.diary, this.props.keyValue);\n      }\n    }\n  }\n\n  //onKeyPress={this.handleKeyPress}\n  render() {\n    //   console.log(\"for comment section\")\n    //   console.log(this.props.diary)\n    return (\n      <div className=\"text-center\">\n        <div id=\"commentTextArea\" className=\"container\">\n          <form className=\"commentForm\" onSubmit={this.onCommentSubmit}>\n            <div className=\"input-group\" >\n              <textarea className=\"form-control\" value={this.state.comment} id=\"textarea\" name=\"text\" rows=\"2\" cols=\"80\" type=\"text\"\n                placeholder=\"할말..\" onChange={this.updateComment}></textarea>\n              <span className=\"input-group-btn\">\n                <button type=\"submit\" className=\"btn btn-light ml-1\" style={{ height: \"60px\" }}>입력</button>\n              </span>\n            </div>\n          </form>\n          {/* <button className=\"btn btn-primary \">\n  \n                입력\n                  </button> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WriteComment","import React, { Component } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport Pagination from \"react-js-pagination\";\nimport ReactPaginate from 'react-paginate';\n// import \"bootstrap-less\";\n\n// require(\"bootstrap/less/bootstrap.less\");\n\n\nclass CommentList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comments: [],\n            pageCount: ''\n        }\n        // this.handlePageChange = this.handlePageChange.bind(this)\n\n    }\n\n\n\n    removeComment = (commentKey) => {\n        if (window.confirm('정말로 지우시겠습니까?')) {\n            firebase.database().ref(`shared/diaries/`).child(this.props.diary.key).child(\"comments\").child(commentKey).remove();\n        }\n    }\n\n    componentDidMount() {\n        // console.log(this.props.currentUser.uid)\n        // console.log(this.props.keyValue)\n        // console.log(this.props.diary)\n\n        firebase.database().ref(`shared/diaries/`).child(this.props.keyValue).child(\"comments\").on(\"value\", (snapshot) => {\n            if (snapshot.exists()) {\n                this.setState({ comments: snapshot.val() })\n            }\n        })\n    \n    }\n\n    // componentWillMount() {\n    //     firebase.database().ref('unregister').off();\n    // }\n\n    render() {\n        // console.log(this.props.diary)\n\n        // let refComment = firebase.database().ref(`shared/diaries/${this.props.diary.userID}-${this.props.diary.date}/comments`)\n        // console.log(typeof(refComment))\n        let content = '';\n        // console.log(\"comments\")\n        // console.log(this.state.comments)\n        if (this.state.comments !== []) {\n            let commentKeys = Object.keys(this.state.comments)\n            // console.log(chirpsKeys);\n            let commentObject = commentKeys.map((key) => {\n                let commentObj = this.state.comments[key];\n                commentObj.id = key;\n                return commentObj;\n            })\n            content = commentObject.map((object) => {\n                return (<SingleComment removeComment={this.removeComment} key={object.id} comment={object} currentUser={this.props.currentUser} diary={this.props.diary} />)\n            })\n        }\n        return (\n            // style={{width:\"85%\", maxHeight:\"600px\", overflow:\"scroll\"}}\n            // <div className=\"container py-3\" style={{backgroundColor: \"#FBF8D5\", width:\"70%\"}}>\n            <div id=\"commentListBox\"className=\"container-fluid mt-5\" style={{ width:\"85%\", maxHeight:\"600px\", overflow:\"auto\"}}>\n                {content}\n            </div>\n            );\n    }\n}\n\n\nclass SingleComment extends Component {\n    removeComment = () => {\n        this.props.removeComment(this.props.comment.id);\n        // console.log(this.props.comment.id)\n    }\n\n    render() {\n        let comment = this.props.comment;\n        //<span className=\"handle\">{comment.userName} </span>\n        let content = <div></div>\n        //others comment \n        //if comment's commenter's id is different that writer's id\n        let button = <div></div>;\n        if (this.props.comment.userID === this.props.currentUser.uid) {\n            button = (<div className=\"col-12 col-sm-12\" id=\"removeComment\">\n                <button id=\"oneCommentIn\" onClick={this.removeComment} className=\"btn\">\n                    x\n        </button>\n            </div>)\n        }\n        //other's comment\n        if (this.props.comment.userID !== this.props.diary.userID) {\n            content = (\n                <div className=\"container mb-3\" id=\"commentContainerOther\">\n                    <div className=\"row p-3 py-2 border\" id=\"oneComment\" style={{ backgroundColor: this.props.comment.color }}>\n                        <div className=\"col-lg-2 col-md-3 col-sm-12\">\n                            <p id=\"oneCommentIn\">\n                                {this.props.comment.displayName}\n                            </p>\n                        </div>\n                        <div className=\"col ml-2 pl-4 pl-lg-1 align-center\">\n                            {/* <span className=\"time\"><Time value={comment.time} relative/></span> */}\n                            {comment.text}\n                        </div>\n                        {button}\n                    </div>\n                </div>)\n            //writer's comment\n        } else {\n            content = (\n                <div className=\"container mb-3\" id=\"commentContainerOwn\">\n                    <div className=\"row p-3 py-2 bg-white border\" id=\"ownComment\">\n                        <div className=\"col-lg-2 col-md-3\">\n                            <p id=\"oneCommentIn\">\n                                {this.props.comment.displayName}\n                            </p>\n                        </div>\n                        <div className=\"col pl-4 pl-lg-1\">\n                            {/* <span className=\"time\"><Time value={comment.time} relative/></span> */}\n                            <div id=\"commentBox\">{comment.text}</div>\n                        </div>\n                        {button}\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div>\n                {content}\n\n            </div>\n        )\n    }\n}\n\nexport default CommentList","import React, { Component } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport WriteComment from './WriteComment'\nimport CommentList from './CommentList'\n\n// import Time from 'react-time'\n\n// import { Form } from 'reactstrap'\n\nimport { Redirect } from 'react-router-dom';\n\n\nclass ChosenDiary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n      diary: ''\n    }\n  }\n\n  // submitHandler = (event) => {\n  //   event.preventDefault();\n  //   if (window.confirm('정말로 지우시겠습니까?')) {\n  //     this.props.removeDiary(this.props.diary.key);\n  //   }\n  //   // console.log(this.props.diary.key)\n  //   // return <Redirect to='/SavedDiaries' />\n  // }\n\n\n  sharedRemovedHanler = (event) => {\n    event.preventDefault();\n    if (window.confirm('공유된 게시물을 정말로 지우시겠습니까?')) {\n      this.props.removeMySharedDiary(this.state.diary.key);\n      // this.setState({ redirect: true })\n    }\n  }\n\n  // savedHandler = (event) => {\n  //   event.preventDefault();\n  //   if (window.confirm('공유하시겠습니까?')) {\n  //     this.props.shareDiary(this.props.diary);\n  //   }\n  // }\n\n  componentDidMount() {\n    // console.log(this.props.match.params.keySeconds)\n    let ref = firebase.database().ref(`shared/diaries`).child(this.props.match.params.keySeconds)\n    ref.on(\"value\", (snapshot) => {\n      // console.log(snapshot.val())\n      this.setState({ diary: snapshot.val() })\n    })\n  }\n\n  render() {\n    if (this.state.redirect) {\n      //  return <Redirect push to={\n      //     '/ChosenDiary/'\n      //  } />\n      window.location.reload()\n    }\n    // console.log(this.props.match.params.keySeconds);\n    // console.log(this.props.currentUser.uid)\n    // console.log();\n    let body = <div></div>\n    if (this.state.diary !== null) {\n      body =\n        (<div className=\"container text-center mt-4\">\n          <div className=\"jumbotron\" style={{ backgroundColor: 'white' }}>\n            <h1 id=\"diaryTitle\" className=\"display-4\">{this.state.diary.title}</h1>\n            <p id=\"diaryText\" className=\"lead\">\n              {this.state.diary.diary}\n            </p>\n            <p className=\"lead\">\n            </p>\n          </div>\n        </div>)\n    }\n    let content = <div></div>;\n    if (this.state.diary !== null && typeof (this.state.diary) !== 'undefined') {\n      if (this.state.diary.userID === this.props.currentUser.uid) {\n        // console.log(this.state.diary)\n        content = (\n          <div>\n            <WriteComment keyValue = {this.props.match.params.keySeconds} currentUser={this.props.currentUser} diary={this.state.diary} notifyCommentUser= {this.props.notifyCommentUser}/>\n            <CommentList keyValue = {this.props.match.params.keySeconds} currentUser={this.props.currentUser} diary={this.state.diary} />\n            <div className=\"text-center\">\n              <button type=\"submit\" className=\"btn btn-danger m-3\" onClick={this.sharedRemovedHanler}>\n                삭제하기\n          </button>\n            </div>\n          </div>\n        )\n\n        //sharedDiaries section: clicked on other post\n      } else {\n        content = (\n          <div>\n            <WriteComment keyValue = {this.props.match.params.keySeconds} notifyCommentUser= {this.props.notifyCommentUser} \n            notifyUser={this.props.notifyUser} currentUser={this.props.currentUser} diary={this.state.diary} />\n            <CommentList keyValue = {this.props.match.params.keySeconds} currentUser={this.props.currentUser} diary={this.state.diary} />\n          </div>)\n      }\n    }else{\n      content=(<p className=\"text-center lead display-4 m-5\" >존재하지않는 일기입니다</p>)\n    }\n    // console.log(this.state.diary)\n    // window.location.reload()\n    return (\n      <div>\n        {body}\n\n        {/* <form className=\"myForm\"> */}\n        {content}\n        {/* </form> */}\n      </div>\n    );\n  }\n}\n\n\n\nexport default ChosenDiary","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport WriteComment from './WriteComment'\nimport CommentList from './CommentList'\n\n// import Time from 'react-time'\n\n// import { Form } from 'reactstrap'\n\nimport { Redirect } from 'react-router-dom';\n\n\nclass OwnChosenDiary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n      diary: ''\n    }\n  }\n\n  submitHandler = (event) => {\n    // console.log(this.props.match.params.keySeconds)\n    // console.log(this.state.diary)\n    event.preventDefault();\n    if (window.confirm('정말로 지우시겠습니까?')) {\n      this.props.removeDiary(this.props.match.params.keySeconds);\n    }\n    // console.log(this.props.diary.key)\n    // return <Redirect to='/SavedDiaries' />\n  }\n\n  savedHandler = (event) => {\n    event.preventDefault();\n    if (window.confirm('공유하시겠습니까?')) {\n      this.props.shareDiary(this.state.diary);\n    }\n  }\n\n  componentDidMount(){\n    \n    let ref = firebase.database().ref(`/diaries`).child(this.props.currentUser.uid).child(this.props.match.params.keySeconds)\n    ref.child(\"key\").on(\"value\", (snapshot) => {\n        if(!snapshot.exists()){\n            ref.child(\"key\").set(this.props.match.params.keySeconds)\n        }\n    })\n    ref.on(\"value\", (snapshot) => {\n      // console.log(snapshot.val())\n      this.setState({diary: snapshot.val()})\n    })\n  }\n\n  render() {\n    // console.log(this.props.match.params.keySeconds)\n    // console.log(this.state.diary)\n    // console.log(this.props.match.params.keySeconds);\n    // console.log();\n    let content = <div></div>;\n      content = (\n        <div className=\"text-center\">\n          <button type=\"submit\" className=\"btn btn-info\" onClick={this.savedHandler}>\n            공유하기\n        </button>\n          <button type=\"submit\" className=\"btn btn-danger m-3\" onClick={this.submitHandler}>\n            삭제하기\n        </button>\n        </div>\n      )\n\n    // window.location.reload()\n    return (\n      <div>\n        <div className=\"container text-center mt-4\">\n          <div className=\"jumbotron\" style={{ backgroundColor: 'white'}}>\n            <h1 id=\"diaryTitle\" className=\"display-4\">{this.state.diary.title}</h1>\n            <p id =\"diaryText\" className=\"lead\">\n              {this.state.diary.diary}\n            </p>\n            <p className=\"lead\">\n            </p>\n          </div>\n        </div>\n\n        {/* <form className=\"myForm\"> */}\n        {content}\n        {/* </form> */}\n      </div>\n    );\n  }\n}\n\n\n\n\nexport default OwnChosenDiary","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Redirect } from 'react-router-dom';\nimport { TagCloud } from \"react-tagcloud\";\n\n\nclass SavedDiaries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n      clickedDiary: ''\n    }\n  }\n\n  handleClick(tag) {\n    // console.log(tag.value)\n    // this.props.clickUpdate(tag);\n    this.setState({ redirect: true, clickedDiary: tag })\n  }\n\n  render() {\n    // console.log(\"passedDown diaries to saved\")\n    // console.log(this.props.diaries)\n    let data = this.props.diaries.map((diary) => {\n      // return <OneSavedDiary key={diary.date} oneDiary={diary} />\n      return ({ value: diary.title, count: Math.round((Math.random() * 20)), diary: diary.diary, date: diary.date, key: diary.id, id: diary.id, userID: diary.userID});\n    })\n    // let diaryCards = this.props.diaries.map((diary) => {\n    //   return <DiaryCard diary={diary} />\n    // })\n\n    if (this.state.redirect) {\n      // return <Redirect push to={'/ChosenDiary/' + this.state.clickedDiary.key}/>\n      return <Redirect push to={{\n        pathname: '/OwnChosenDiary/' + this.state.clickedDiary.id\n      }} />\n\n    }\n    // const customRenderer = (tag, size, color) => (\n    //   <span key={tag.value}\n    //         style={{\n    //           animation: 'blinker 7s linear infinite',\n    //           animationDelay: `${Math.random() * 2}s`,\n    //           fontSize: `${size}em`,\n    //           // border: `2px solid ${color}`,\n    //           margin: '3px',\n    //           padding: '3px',\n    //           display: 'inline-block',\n    //            color: color,\n    //         }}>{tag.value}</span>\n    // );\n    return (\n      <div>\n        < div className=\"container mt-4\" id=\"wordCloud\">\n        <TagCloud \n        className=\"text-center\" id=\"tagCloud\" minSize={30}\n              maxSize={60}\n              tags={data}\n              onClick={(tag) => this.handleClick(tag)} \n              shuffle={false}\n              // renderer={customRenderer}\n              />\n              </div>\n      </div >\n    );\n  }\n}\n\n\n\nexport default SavedDiaries","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass WriteDiary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textValue: '',\n      title: ''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let date = new Date();\n    if (this.state.textValue.length === 0 || this.state.title.length === 0) {\n      alert(\"제목/내용을 써주세요!\")\n    } else if(this.state.title.length > 20){\n      alert(\"제목은 20자 이내로 쓰셔야합니다\")\n    } else if(this.state.textValue.length > 2000){\n      alert(\"글은 2000자 이내로 써주세요\")\n    }else {\n      if (window.confirm('내 일기장에 저장하시겠습니까?')) {\n        this.props.textUpdate(this.state.textValue, date.getMilliseconds(), this.state.title);\n        this.setState({ textValue: '', title: '' })\n      }\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ textValue: event.target.value });\n  }\n\n  titleChange = (event) => {\n    this.setState({ title: event.target.value })\n  }\n\n  render() {\n    return (\n      <div>\n      <div className=\"container text-center\">\n        <form className=\"myForm mt-5\" onSubmit={this.handleSubmit}>\n          <input value= {this.state.title} className=\"mb-3 p-2\" size=\"71\" id=\"title\" type=\"text\" placeholder=\"제목\" onChange={this.titleChange}></input>\n          <div className=\"form\">\n            <textarea value={this.state.textValue} className=\"p-2\" id=\"textarea\" type=\"text\" rows=\"20\" cols=\"70\" placeholder=\"오늘하루는 어떠셨나요?\" onChange={this.handleChange}></textarea>\n          </div>\n          <button type=\"submit\" className=\"btn btn-warning btn-lg mt-3 mb-3\">\n            저장\n            </button>\n        </form>\n        </div>\n        <div id=\"footer\" className=\"mt-5 pb-2\">\n            {/* <Notification notify={this.notifyUser}/> */}\n            <p className=\"lead mt-1 ml-3\" style={{fontSize: \"0.9em\", color:\"#B09273\"}}>\n            Copyright (c) FELIPECHOI All Right Reserved.\n            <br/>\n              contact: min_0917@naver.com\n            </p>\n          </div>\n          </div>\n     );\n  }\n}\n\nexport default WriteDiary","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Redirect } from 'react-router-dom';\nimport { TagCloud } from \"react-tagcloud\";\n\nclass OthersDiaries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n      clickedDiary: '',\n      // loading: true\n    }\n  }\n  // componentDidMount() {\n  //   if (typeof (this.props.sharedDiaries) !== undefined) {\n  //     this.setState({ loading: false })\n  //   }\n  // }\n\n  handleClick(tag) {\n    // this.props.clickUpdate(tag);\n    this.setState({ redirect: true, clickedDiary: tag })\n  }\n  render() {\n    // if (this.state.loading) {\n    //   return (<div className=\"text-center\">\n    //     <i className=\"fa fa-spinner fa-spin fa-3x\" aria-label=\"Connecting...\"></i>\n    //   </div>);\n    // }\n    // console.log(this.props.sharedDiares)\n\n    if (this.state.redirect) {\n      // return <Redirect push to={'/ChosenDiary/' + this.state.clickedDiary.key}/>\n      return <Redirect push to={\n         '/ChosenDiary/' + this.state.clickedDiary.key\n      } />\n    }\n    let data = [];\n    // console.log(this.props.sharedDiaries)\n    if (typeof (this.props.sharedDiaries) !== 'undefined') {\n      data = this.props.sharedDiaries.map((diary) => {\n        return ({\n          value: diary.title, count: Math.random() * 20, diary: diary.diary, date: diary.date,\n          key: diary.key, userID: diary.userID, shared: true, id: diary.key\n        });\n      })\n    }\n    // console.log(data)\n    // console.log(\"sharedDiares in Component\");\n    // console.log(data);\n    // const customRenderer = (tag, size, color) => (\n    //   <span key={tag.value}\n    //     style={{\n    //       animation: 'blinker 7s linear infinite',\n    //       animationDelay: `${Math.random() * 2}s`,\n    //       fontSize: `${size}em`,\n    //       // border: `2px solid ${color}`,\n    //       margin: '3px',\n    //       padding: '3px',\n    //       display: 'inline-block',\n    //       color: color,\n    //     }}>{tag.value}</span>\n    // );\n    return (\n      <div>\n        < div className=\"container mt-4\" id=\"wordCloud\">\n          <TagCloud className=\"text-center\" id=\"tagCloud\" minSize={30}\n            maxSize={60}\n            tags={data}\n            onClick={(tag) => this.handleClick(tag)}\n          // renderer={customRenderer}\n          />\n        </div>\n      </div >\n    );\n  }\n}\n\nexport default OthersDiaries","import React, { Component } from 'react';\nimport 'react-notifications/lib/notifications.css';\nimport './App.css';\nimport './App.scss'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, NavItem, Nav } from 'reactstrap'\nimport { HashRouter, Route, Switch, Link, Redirect } from 'react-router-dom';\nimport { TagCloud } from \"react-tagcloud\";\nimport _ from 'lodash';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport SignUpForm from './SignUpForm';\nimport ChosenDiary from './ChosenDiary'\nimport OwnChosenDiary from './OwnChosenDiary'\n// import config from './app.env'\nimport SavedDiaries from './SavedDiaries'\nimport WriteDiary from './WriteDiary'\nimport OthersDiaries from './OthersDiaries'\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport '@firebase/messaging'\n\n// import { forEach } from '@firebase/util';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      diaries: [],\n      sharedDiaries: [],\n      clickedDiary: '',\n      clickedLogIn: false,\n      notification: [],\n      commentNotification:[]\n    }\n  }\n  \n  notifyUser = (comment, diary, keyValue) => {\n    // console.log(keyValue)\n    // console.log(diary.key)\n    let ref = firebase.database().ref(`diaries/${diary.userID}`)\n    let newData = {\n      commenterID: comment.userID, writerID: diary.userID, commentText: comment.text, diaryKey: keyValue, title: diary.title\n    }\n    ref.child('notification').child(keyValue).push(newData)\n    ref.child('notification').on(\"value\", (snapshot) => {\n      // console.log(\"commented!:\")\n      // console.log(snapshot.val())\n    })\n  }\n\n  notifyCommentUser = (userList, diary, diaryKey) => {\n    for(let i=0; i<userList.length; i++){\n        // console.log(userList);\n        // console.log(diaryKey)\n        firebase.database().ref(`diaries/${userList[i]}`).child('CommentNotification').child(diaryKey).push(diaryKey)\n    }\n  }\n\n  textUpdate = (diary, date, title) => {\n    // console.log(this.state.user)\n    let currentUser = this.state.user;\n    let newData = {\n      userID: currentUser.uid,\n      time: firebase.database.ServerValue.TIMESTAMP, diary: diary,\n      title: title, date: date, displayName: currentUser.displayName,\n      shared: false\n    }\n    // copiedDiaries.push(newData);\n    let diariesRef = firebase.database().ref(`diaries/${currentUser.uid}`)\n    // console.log(newData);\n    diariesRef.push(newData);\n  }\n\n  shareDiary = (diary) => {\n    // console.log(diary)\n    let ref = firebase.database().ref(`diaries/${this.state.user.uid}`)\n    let shared = false\n\n    firebase.database().ref('shared/diaries').on(\"value\", (snapshot) => {\n      // if shared diary exists already\n      for (let key in snapshot.val()) {\n        if (diary.key === key) {\n          shared = true;\n          // console.log('HEY!!!')\n        }\n      }\n    })\n    // console.log('HEY!!!')\n    // console.log(diary)\n    //title: diary.value\n    if (shared === false) {\n      firebase.database().ref(`shared/diaries/`).child(diary.key).set(diary)\n      ref.child(diary.key).child(`shared`).set(true);\n      // shared = true;\n      // ref.child(diary.key).child(shared).set(true);\n    } else {\n      alert(\"이미 공유하신 게시물입니다!\")\n    }\n  }\n\n  removeMySharedDiary = (id) => {\n    let ref = firebase.database().ref(`shared/diaries`).child(id)\n    ref.remove()\n    // window.location.reload()\n    // this.setState({sharedDiaries})\n  }\n\n  removeDiary = (id) => {\n    // console.log(id)\n    let diariesRef = firebase.database().ref(`diaries/${this.state.user.uid}`)\n    diariesRef.child(id).remove();\n  }\n\n  clickUpdate = (diary) => {\n    // console.log(diary.value)\n    this.setState({ clickedDiary: diary })\n    // console.log(this.state.clickedDiary.value)\n  }\n  clickLogIn = () => {\n    this.setState({ clickedLogIn: true })\n  }\n\n  componentDidMount() {\n    this.authUnRegFunc = firebase.auth().onAuthStateChanged((firebaseUser) => {\n      if (firebaseUser) {\n        this.setState({\n          user: firebaseUser,\n        })\n        //setting state for my private diaries\n        // let messaging = firebase.messaging();\n        // messaging.usePublicVapidKey(\"AAAAydXUZE0:APA91bFX8qMLjnDWsSaNVE7JvoSl5FFmPWVSseYFilJoFCbRPN_PYRF4tYd1nmTBVO9kLkgUOOz3dQ1CHTo0EFGgnVLIPaKETfHcSbmenv8k_GWttpjoTVoF684HnSrmeiP3dqsQT_JD\");\n        // messaging.requestPermission()\n        //   .then(function () {\n        //     console.log(\"havePermission\")\n        //   })\n\n\n        firebase.database().ref(`diaries/${this.state.user.uid}`).on(\"value\", (snapshot) => {\n          // console.log(\"posted\");\n          // console.log(snapshot.val())\n          let diariesObject = [];\n          if (snapshot.exists()) {\n            let diariesKeys = Object.keys(snapshot.val())\n            // console.log(chirpsKeys);\n            // console.log(snapshot.val())\n\n            diariesObject = diariesKeys.map((key) => {\n              let diariesObj = {}\n              if (key !== 'notification') {\n                diariesObj = snapshot.val()[key];\n                // console.log(key)\n                diariesObj.id = key;\n              }\n              return diariesObj;\n            })\n          }\n\n          // console.log(\"Component Did Mount:\")\n          // console.log(diariesObject)\n          this.setState({ diaries: diariesObject })\n\n        })\n        //setting state for my shared diaries\n\n\n        firebase.database().ref(`shared/diaries`).on(\"value\", (snapshot) => {\n          let sharedObject = [];\n          if (snapshot.exists()) {\n            let sharedKeys = Object.keys(snapshot.val())\n            // console.log(chirpsKeys);\n            sharedObject = sharedKeys.map((key) => {\n              let sharedObj = snapshot.val()[key];\n              sharedObj.id = key;\n              return sharedObj;\n            })\n            this.setState({ sharedDiaries: sharedObject })\n          }\n        })\n\n        let notifyObject = [];\n        firebase.database().ref(`diaries/${this.state.user.uid}`).child('CommentNotification').on(\"value\", (snapshot) => {\n          if (snapshot.exists()) {\n            let notifyKeys = Object.keys(snapshot.val())\n            // console.log(notifyKeys)\n            notifyObject = notifyKeys.map((key) => {\n              let notifyObj = snapshot.val()[key];\n              // notifyObj.id = key;\n              return notifyObj;\n            })\n          }\n          this.setState({ commentNotification: notifyObject })\n        })\n        // console.log(notifyObject)\n        let commentObject = [];\n        firebase.database().ref(`diaries/${this.state.user.uid}`).child('notification').on(\"value\", (snapshot) => {\n          if (snapshot.exists()) {\n            let notifyKeys = Object.keys(snapshot.val())\n            // console.log(notifyKeys)\n            commentObject = notifyKeys.map((key) => {\n              let notifyObj = snapshot.val()[key];\n              notifyObj.id = key;\n              return notifyObj;\n            })\n          }\n          this.setState({ notification: commentObject })\n        })\n\n      } else {\n        this.setState({ user: null })\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    this.authUnRegFunc();\n  }\n\n  handleSignUp(email, password, handle) {\n\n    let user = null;\n    this.setState({ errorMessage: null });\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n      .then(function () {\n        user = firebase.auth().currentUser;\n        user.sendEmailVerification();\n      })\n      .then(function () {\n        user.updateProfile({\n          displayName: handle,\n        });\n      })\n      .catch((err) => {\n        this.setState({ errorMessage: err.message });\n      })\n\n\n    /* TODO: sign up user here */\n  }\n\n  handleSignIn(email, password) {\n    // window.location.reload();\n    this.setState({ errorMessage: null });\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .catch(error => this.setState({ errorMessage: error.message })\n      );\n  }\n\n  //A callback function for logging out the current user\n  handleSignOut() {\n    this.setState({ errorMessage: null }); //clear any old errors\n    firebase.auth().signOut()\n      .catch(error => {\n        this.setState({ errorMessage: error.message })\n      })\n    /* TODO: sign out user here */\n  }\n\n\n  render() {\n    let content = null; //content to render\n    if (!this.state.user) { //if logged out, show signup form\n      content = (\n        <div className=\"container \">\n          {/* 6F6B29 */}\n          <div id=\"websiteTitle\" style={{ textAlign: 'center' }}>\n            <span>M</span>\n            <span>I</span>\n            <span>L</span>\n            <span>I</span>\n            <span>M</span>\n            <span>I</span>\n            <span>L</span>\n            <span>I</span>\n          </div>\n          <br />\n          <SignUpForm\n            signUpCallback={(email, password, handle) => this.handleSignUp(email, password, handle)}\n            signInCallback={(email, password) => this.handleSignIn(email, password)}\n          // handleAnonymous = {(anonymous) => this.handleAnonymous(anonymous)}\n          />\n        </div>\n      );\n    } else {\n      // console.log(\"state Diaries:\")\n      // console.log(this.state.diaries)\n      content = (\n        <div>\n          <header className=\"App-header\">\n            <div className=\"menuBar mt-2 ml-2\">\n              <Notification notification={this.state.notification} currentUser={this.state.user} />\n              <CommentNotification notification={this.state.commentNotification} currentUser={this.state.user}/>\n              {this.state.user && <button id=\"logOutButton\" className=\"btn-lg btn\" onClick={() => this.handleSignOut()}>\n                <i className=\"fas fa-sign-out-alt\"></i>\n              </button>}\n            </div>\n            <h1 className=\"text-center\" id=\"title\"><Link to=\"/\" id=\"titleLink\">\n              MiliMili\n            </Link>\n            </h1>\n            <div className=\"text-center\">\n              {/* <button className=\"btn ml\" onClick={this.clickLogIn}>\n                  로그인\n            </button> */}\n              {/* {this.state.user && <button className=\"btn\" onClick={() => this.handleSignOut()}>\n                로그아웃\n            </button>} */}\n            </div>\n          </header>\n\n          <main className=\"navBar mt-3\">\n            <HashRouter>\n              <div>\n                <Navbar>\n                  <div className=\"mx-auto\">\n                    <Nav>\n                      <NavItem><Link to={'/'}>일기쓰기</Link>\n                      </NavItem>\n                      <NavItem className=\"ml-5\"><Link to={'/SavedDiaries'}>나의 일기 </Link>\n                      </NavItem>\n                      <NavItem className=\"ml-5\"><Link to={'/others'}>공유된 일기</Link></NavItem>\n                    </Nav>\n                  </div>\n                </Navbar>\n                <Switch>\n                  <Route exact path='/' render={() => <WriteDiary textUpdate={this.textUpdate} />} />\n                  {/* <IndexRoute render={() => <SavedDiaries diaries={this.state.diaries} clickUpdate={this.clickUpdate} />}/> */}\n                  <Route path='/SavedDiaries' render={() => <SavedDiaries diaries={this.state.diaries} clickUpdate={this.clickUpdate} />} />\n                  <Route path='/others' render={() => <OthersDiaries clickUpdate={this.clickUpdate} sharedDiaries={this.state.sharedDiaries} />} />\n                  {/* {console.log(this.state.clickedDiary)} */}\n                  <Route path='/ChosenDiary/:keySeconds' render={(props) => <ChosenDiary {...props} currentUser={this.state.user}\n                    removeMySharedDiary={this.removeMySharedDiary}\n                    notifyUser={this.notifyUser} notifyCommentUser={this.notifyCommentUser}/>} />\n                  <Route path='/OwnChosenDiary/:keySeconds' render={(props) => <OwnChosenDiary {...props} currentUser={this.state.user}\n                    removeDiary={this.removeDiary} shareDiary={this.shareDiary} \n                    notifyUser={this.notifyUser} />} />\n                  <Redirect to='/' />\n                </Switch>\n              </div>\n            </HashRouter>\n          </main>\n        </div>\n\n      );\n\n    }\n    return (\n      <div className=\"App\">\n        {this.state.errorMessage &&\n          <p className=\"alert alert-danger\">{this.state.errorMessage}</p>\n        }\n        {content}\n\n      </div>\n\n    );\n  }\n}\n\n\nclass Notification extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notification: [],\n      redirect: false,\n      parameter: ''\n    }\n  }\n  handleNotification = () => {\n    // console.log(\"Clicked\")\n    // console.log(_.size(this.props.notification))\n    for (let i = 0; i < this.props.notification.length; i++) {\n      // console.log(this.props.notification[i])\n      // console.log(_.size(this.props.notification[i]))\n      this.createNotification(this.props.notification[i])\n      // console.log(\"redirected\")\n    }\n  }\n\n  createNotification(notification) {\n    // console.log(\"clicked\")\n    // console.log(notification)\n    if (_.size(notification)-1 > 1) {\n      // eslint-disable-next-line default-case\n      NotificationManager.info(`\"${notification[Object.keys(notification)[0]].title}\"`, `${_.size(notification)-1}개의 댓글이 달렸습니다!`, 3000,\n        () => { return this.clickedNotification(notification[Object.keys(notification)[0]]) });\n    } else {\n      NotificationManager.info(`\"${notification[Object.keys(notification)[0]].title}\"`,`댓글이 달렸습니다! 클릭해서 확인`, 3000, () => {return this.clickedNotification(notification[Object.keys(notification)[0]])});\n    }\n  }\n\n  clickedNotification(parameter) {\n    // console.log()\n    firebase.database().ref(`diaries/${this.props.currentUser.uid}`).child('notification').child(parameter.diaryKey).remove()\n    this.setState({ redirect: true, parameter: parameter.diaryKey })\n    // console.log(parameter.diaryKey)\n  }\n\n  render() {\n    if (this.state.redirect && !window.location.href.includes(this.state.parameter)) {\n//       console.log(\"redirected\")\n// console.log(window.location.href)\n      return <Redirect push to={{\n        pathname: '/ChosenDiary/' + this.state.parameter\n      }} />\n    \n    }else if(this.state.redirect && window.location.href.includes(this.state.parameter)){\n      window.location.reload();\n    }\n    // console.log(\"Notification Object:\")\n    // console.log(this.props.notification)\n    return (\n      <div className=\"containerNotification\">\n        <div className=\"ml-2 mt-2\" >\n          <button id=\"notifyButton\" style={{ borderRadius: 200 }} className='btn-lg btn'\n            onClick={this.handleNotification}><i className=\"fas fa-comment\"> <span id=\"num\">{this.props.notification.length}</span> </i>\n          </button>\n          <NotificationContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass CommentNotification extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notification: [],\n      redirect: false,\n      parameter: ''\n    }\n  }\n  handleNotification = () => {\n    // console.log(\"Clicked\")\n    // console.log(_.size(this.props.notification))\n    for (let i = 0; i < this.props.notification.length; i++) {\n      // console.log(this.props.notification[i])\n      // console.log(_.size(this.props.notification[i]))\n      this.createNotification(this.props.notification[i])\n      // console.log(\"redirected\")\n    }\n  }\n\n  createNotification(notification) {\n    // console.log(\"clicked\")\n    // console.log(notification[Object.keys(notification)[0]])\n      // eslint-disable-next-line default-case\n      NotificationManager.info(`댓글을 단 게시물에서 또다른 댓글이 달렸습니다!`, `클릭해서 확인해주세요!`, 3000,\n        () => { return this.clickedNotification(notification[Object.keys(notification)[0]]) });\n  }\n\n  clickedNotification(parameter) {\n    // console.log(parameter)\n    firebase.database().ref(`diaries/${this.props.currentUser.uid}`).child('CommentNotification').child(parameter).remove()\n    this.setState({ redirect: true, parameter: parameter })\n  }\n\n  render() {\n    // console.log(this.props.notification)\n    if (this.state.redirect && !window.location.href.includes(this.state.parameter)) {\n//       console.log(\"redirected\")\n// console.log(window.location.href)\n      return <Redirect push to={{\n        pathname: '/ChosenDiary/' + this.state.parameter\n      }} />\n    \n    }else if(this.state.redirect && window.location.href.includes(this.state.parameter)){\n      window.location.reload();\n    }\n    // console.log(\"Notification Object:\")\n    // console.log(this.props.notification)\n    return (\n      <div className=\"containerNotification\">\n        <div className=\"ml-2 mt-2\" >\n          <button id=\"notifyButton\" style={{ borderRadius: 200 }} className='btn-lg btn'\n            onClick={this.handleNotification}><i className=\"fas fa-comments\"> <span id=\"num\">{this.props.notification.length}</span> </i>\n          </button>\n          <NotificationContainer />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\n// import firebase database\nimport 'firebase/database';\n  // Initialize Firebase\n  var config = {\n    apiKey: process.env.REACT_APP_WEATHER_API_KEY,\n    authDomain: \"milistory.firebaseapp.com\",\n    databaseURL: \"https://milistory.firebaseio.com\",\n    projectId: \"milistory\",\n    storageBucket: \"milistory.appspot.com\",\n    messagingSenderId: \"866875892813\"\n  };\n\n  // let messaging = firebase.messaging();\n  // messaging.usePublicVapidKey(\"BBT1ZkmKPmdoAqXV7RGZymqqZthqGQUsYXlIdzmOQ0nGGBlb6D2DqBG_V8ygsS8Nbjc-GR_BMvrR4RVcJXNF9tw\")\n  // messaging.requestPermission()\n  //   .then(function () {\n  //     console.log(\"have permission\")\n  //   })\n  //   .catch(function (err) {\n  //     console.log(\"nope\")\n  //   })\n  firebase.initializeApp(config);\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}