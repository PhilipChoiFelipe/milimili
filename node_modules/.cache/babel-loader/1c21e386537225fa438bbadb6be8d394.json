{"ast":null,"code":"import _assertThisInitialized from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/PhilipChoi/Desktop/milimili/src/ChosenDiary.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from 'firebase/app';\nimport 'firebase/database'; // import Time from 'react-time'\n// import { Form } from 'reactstrap'\n\nimport { Redirect } from 'react-router-dom';\n\nvar ChosenDiary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChosenDiary, _Component);\n\n  function ChosenDiary(props) {\n    var _this;\n\n    _classCallCheck(this, ChosenDiary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChosenDiary).call(this, props));\n\n    _this.submitHandler = function (event) {\n      event.preventDefault();\n\n      if (window.confirm('정말로 지우시겠습니까?')) {\n        _this.props.removeDiary(_this.props.diary.key);\n      } // console.log(this.props.diary.key)\n\n\n      return React.createElement(Redirect, {\n        to: \"/SavedDiaries\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    };\n\n    _this.sharedRemovedHanler = function (event) {\n      event.preventDefault();\n\n      if (window.confirm('공유된 게시물을 정말로 지우시겠습니까?')) {\n        _this.props.removeMySharedDiary(_this.props.diary.userID, _this.props.diary.date);\n      }\n    };\n\n    _this.savedHandler = function (event) {\n      event.preventDefault();\n\n      if (window.confirm('공유하시겠습니까?')) {\n        _this.props.shareDiary(_this.props.diary);\n      }\n    };\n\n    _this.state = {\n      redirect: false\n    };\n    return _this;\n  }\n\n  _createClass(ChosenDiary, [{\n    key: \"render\",\n    value: function render() {\n      var content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n\n      if (!this.props.diary.shared) {\n        content = React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-info\",\n          onClick: this.savedHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"\\uACF5\\uC720\\uD558\\uAE30\"), React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-danger m-3\",\n          onClick: this.submitHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"\\uC0AD\\uC81C\\uD558\\uAE30\")); //sharedDiaries section: if you click your own shared post\n      } else if (this.props.diary.userID === this.props.currentUser.uid) {\n        content = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(WriteComment, {\n          currentUser: this.props.currentUser,\n          diary: this.props.diary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }), React.createElement(CommentList, {\n          currentUser: this.props.currentUser,\n          diary: this.props.diary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-danger m-3\",\n          onClick: this.sharedRemovedHanler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"\\uC0AD\\uC81C\\uD558\\uAE30\"))); //sharedDiaries section: clicked on other post\n      } else {\n        console.log(\"before comment\");\n        console.log(this.props.diary);\n        content = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(WriteComment, {\n          currentUser: this.props.currentUser,\n          diary: this.props.diary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), React.createElement(CommentList, {\n          currentUser: this.props.currentUser,\n          diary: this.props.diary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"jumbotron\",\n        style: {\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.props.diary.value), React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.props.diary.diary), React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))), content);\n    }\n  }]);\n\n  return ChosenDiary;\n}(Component);\n\nvar WriteComment =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(WriteComment, _Component2);\n\n  function WriteComment(props) {\n    var _this2;\n\n    _classCallCheck(this, WriteComment);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(WriteComment).call(this, props));\n\n    _this2.updateComment = function (event) {\n      event.preventDefault();\n\n      _this2.setState({\n        comment: event.target.value\n      });\n    };\n\n    _this2.onCommentSubmit = function (e) {\n      e.preventDefault(); //don't submit\n\n      /* TODO: add a new Chirp to the database */\n      // let propsUser = this.props.currentUser;\n\n      var newComment = {\n        text: _this2.state.comment,\n        time: firebase.database.ServerValue.TIMESTAMP\n      };\n      console.log(\"commentsubmitted\");\n      console.log(_this2.state.comment); //.child(`${this.props.diary.userID}-${this.props.diary.date}`)\n\n      firebase.database().ref(\"shared/diaries/\").child(_this2.props.diary.userID + '-' + _this2.props.diary.date).child(\"comments\").push(newComment);\n\n      _this2.setState({\n        comment: ''\n      }); //empty out post for next time\n\n    };\n\n    _this2.state = {\n      comment: ''\n    };\n    _this2.updateComment = _this2.updateComment.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(WriteComment, [{\n    key: \"render\",\n    //onKeyPress={this.handleKeyPress}\n    value: function render() {\n      console.log(\"for comment section\");\n      console.log(this.props.diary);\n      return React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"commentForm\",\n        onSubmit: this.onCommentSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"textarea\",\n        name: \"text\",\n        rows: \"2\",\n        cols: \"80\",\n        type: \"text\",\n        placeholder: \"\\uD560\\uB9D0..\",\n        onChange: this.updateComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-light mb-5 ml-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"\\uC785\\uB825\"))));\n    }\n  }]);\n\n  return WriteComment;\n}(Component);\n\nvar CommentList =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(CommentList, _Component3);\n\n  function CommentList(props) {\n    var _this3;\n\n    _classCallCheck(this, CommentList);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(CommentList).call(this, props));\n    _this3.state = {\n      comments: []\n    };\n    return _this3;\n  }\n\n  _createClass(CommentList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      firebase.database().ref(\"shared/diaries/\").child(this.props.diary.userID + '-' + this.props.diary.date).child(\"comments\").on(\"value\", function (snapshot) {\n        _this4.setState({\n          comments: snapshot.val()\n        });\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      firebase.database().ref('unregister').off();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      console.log(\"comments\");\n      console.log(this.state.comments);\n      var commentKeys = Object.keys(this.state.comments); // console.log(chirpsKeys);\n\n      var commentObject = commentKeys.map(function (key) {\n        var commentObj = _this5.state.comments[key];\n        commentObj.id = key;\n        return commentObj;\n      });\n      console.log(\"arrayComments:\");\n      console.log(commentObject);\n      var content = commentObject.map(function (object) {\n        return React.createElement(SingleComment, {\n          key: object.id,\n          comment: object,\n          currentUser: _this5.props.currentUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, content);\n    }\n  }]);\n\n  return CommentList;\n}(Component);\n\nvar SingleComment =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(SingleComment, _Component4);\n\n  function SingleComment() {\n    _classCallCheck(this, SingleComment);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SingleComment).apply(this, arguments));\n  }\n\n  _createClass(SingleComment, [{\n    key: \"render\",\n    value: function render() {\n      var comment = this.props.comment; //<span className=\"handle\">{comment.userName} </span>\n\n      return React.createElement(\"div\", {\n        className: \"row py-4 bg-white border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col pl-4 pl-lg-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SingleComment;\n}(Component);\n\nexport default ChosenDiary;","map":{"version":3,"sources":["/Users/PhilipChoi/Desktop/milimili/src/ChosenDiary.js"],"names":["React","Component","firebase","Redirect","ChosenDiary","props","submitHandler","event","preventDefault","window","confirm","removeDiary","diary","key","sharedRemovedHanler","removeMySharedDiary","userID","date","savedHandler","shareDiary","state","redirect","content","shared","currentUser","uid","console","log","backgroundColor","value","WriteComment","updateComment","setState","comment","target","onCommentSubmit","e","newComment","text","time","database","ServerValue","TIMESTAMP","ref","child","push","bind","CommentList","comments","on","snapshot","val","off","commentKeys","Object","keys","commentObject","map","commentObj","id","object","SingleComment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n// import Time from 'react-time'\n\n// import { Form } from 'reactstrap'\n\nimport { Redirect } from 'react-router-dom';\n\n\nclass ChosenDiary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false\n    }\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    if (window.confirm('정말로 지우시겠습니까?')) {\n      this.props.removeDiary(this.props.diary.key);\n    }\n    // console.log(this.props.diary.key)\n    return <Redirect to='/SavedDiaries' />\n  }\n\n  sharedRemovedHanler = (event) => {\n    event.preventDefault();\n    if (window.confirm('공유된 게시물을 정말로 지우시겠습니까?')) {\n      this.props.removeMySharedDiary(this.props.diary.userID, this.props.diary.date);\n    }\n  }\n\n  savedHandler = (event) => {\n    event.preventDefault();\n    if (window.confirm('공유하시겠습니까?')) {\n      this.props.shareDiary(this.props.diary);\n    }\n  }\n\n  render() {\n    let content = <div></div>;\n    if (!this.props.diary.shared) {\n      content = (\n        <div className=\"text-center\">\n          <button type=\"submit\" className=\"btn btn-info\" onClick={this.savedHandler}>\n            공유하기\n        </button>\n          <button type=\"submit\" className=\"btn btn-danger m-3\" onClick={this.submitHandler}>\n            삭제하기\n        </button>\n        </div>\n      )\n\n      //sharedDiaries section: if you click your own shared post\n    } else if (this.props.diary.userID === this.props.currentUser.uid) {\n      content = (<div>\n        <WriteComment currentUser={this.props.currentUser} diary={this.props.diary} />\n        <CommentList currentUser={this.props.currentUser} diary={this.props.diary}/>\n        <div className=\"text-center\">\n          <button type=\"submit\" className=\"btn btn-danger m-3\" onClick={this.sharedRemovedHanler}>\n            삭제하기\n    </button>\n        </div>\n      </div>)\n\n      //sharedDiaries section: clicked on other post\n    } else {\n      console.log(\"before comment\")\n      console.log(this.props.diary)\n      content = (\n        <div>\n          <WriteComment currentUser={this.props.currentUser} diary={this.props.diary} />\n          <CommentList currentUser={this.props.currentUser} diary={this.props.diary}/>\n        </div>)\n    }\n    return (\n      <div>\n        <div className=\"container text-center\">\n          <div className=\"jumbotron\" style={{ backgroundColor: 'white' }}>\n            <h1 className=\"display-4\">{this.props.diary.value}</h1>\n            <p className=\"lead\">\n              {this.props.diary.diary}\n            </p>\n            <p className=\"lead\">\n            </p>\n          </div>\n        </div>\n\n        {/* <form className=\"myForm\"> */}\n        {content}\n        {/* </form> */}\n      </div>\n    );\n  }\n}\n\nclass WriteComment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: ''\n    }\n    this.updateComment = this.updateComment.bind(this)\n  }\n\n  updateComment = (event) => {\n    event.preventDefault();\n    this.setState({ comment: event.target.value });\n  }\n\n\n  onCommentSubmit = (e) => {\n    e.preventDefault(); //don't submit\n    /* TODO: add a new Chirp to the database */\n    // let propsUser = this.props.currentUser;\n    let newComment = {\n      text: this.state.comment,\n      time: firebase.database.ServerValue.TIMESTAMP\n    }\n    console.log(\"commentsubmitted\")\n    console.log(this.state.comment)\n    //.child(`${this.props.diary.userID}-${this.props.diary.date}`)\n    firebase.database().ref(`shared/diaries/`).child(this.props.diary.userID + '-' + this.props.diary.date).child(\"comments\").push(newComment)\n    this.setState({ comment: '' }); //empty out post for next time\n  }\n\n  //onKeyPress={this.handleKeyPress}\n  render() {\n    console.log(\"for comment section\")\n    console.log(this.props.diary)\n    return (\n      <div className=\"text-center\">\n        <div className=\"container\">\n          <form className=\"commentForm\" onSubmit={this.onCommentSubmit}>\n            <textarea id=\"textarea\" name=\"text\" rows=\"2\" cols=\"80\" type=\"text\"\n              placeholder=\"할말..\" onChange={this.updateComment}></textarea>\n\n            <button type=\"submit\" className=\"btn btn-light mb-5 ml-2\">입력</button>\n          </form>\n          {/* <button className=\"btn btn-primary \">\n\n              입력\n                </button> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass CommentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: []\n    }\n  }\n  componentDidMount() {\n    firebase.database().ref(`shared/diaries/`).child(this.props.diary.userID + '-' + this.props.diary.date).child(\"comments\").on(\"value\", (snapshot) => {\n      this.setState({ comments: snapshot.val() })\n    })\n  }\n\n  componentWillMount() {\n    firebase.database().ref('unregister').off();\n  }\n  render() {\n    console.log(\"comments\")\n    console.log(this.state.comments)\n    let commentKeys = Object.keys(this.state.comments)\n    // console.log(chirpsKeys);\n    let commentObject = commentKeys.map((key) => {\n      let commentObj = this.state.comments[key];\n      commentObj.id = key;\n      return commentObj;\n  })\n  console.log(\"arrayComments:\")\n  console.log(commentObject)\n  let content = commentObject.map( (object) => {\n    return(<SingleComment key={object.id} comment={object} currentUser={this.props.currentUser}/>)\n  })\n\n    return (\n      <div>\n      {content}\n      </div>);\n  }\n}\n\nclass SingleComment extends Component{\n  render(){\n    let comment = this.props.comment;\n//<span className=\"handle\">{comment.userName} </span>\n    return( <div className=\"row py-4 bg-white border\">\n    <div className=\"col-1\">\n    </div>\n    <div className=\"col pl-4 pl-lg-1\">\n\n      \n\n      {/* <span className=\"time\"><Time value={comment.time} relative/></span> */}\n\n      {/* <div className=\"chirp\">{comment.text}</div> */}\n    </div>\n  </div>      \n  )}\n}\n\n\nexport default ChosenDiary"]},"metadata":{},"sourceType":"module"}