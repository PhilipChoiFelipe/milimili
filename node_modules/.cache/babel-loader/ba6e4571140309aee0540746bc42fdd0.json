{"ast":null,"code":"import _classCallCheck from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/PhilipChoi/Desktop/milimili/src/SavedDiaries.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Redirect } from 'react-router-dom';\nimport { TagCloud } from \"react-tagcloud\";\n\nvar SavedDiaries =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SavedDiaries, _Component);\n\n  function SavedDiaries(props) {\n    var _this;\n\n    _classCallCheck(this, SavedDiaries);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SavedDiaries).call(this, props));\n\n    _this.customRenderer = function (tag, size, color) {\n      return React.createElement(\"span\", {\n        key: tag.value,\n        style: {\n          animation: 'blinker 3s linear infinite',\n          animationDelay: \"\".concat(Math.random() * 2, \"s\"),\n          fontSize: \"\".concat(size, \"em\"),\n          border: \"2px solid \".concat(color),\n          margin: '3px',\n          padding: '3px',\n          display: 'inline-block',\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, tag.value);\n    };\n\n    _this.state = {\n      redirect: false,\n      clickedDiary: ''\n    };\n    return _this;\n  }\n\n  _createClass(SavedDiaries, [{\n    key: \"handleClick\",\n    value: function handleClick(tag) {\n      console.log(tag.value);\n      this.props.clickUpdate(tag);\n      this.setState({\n        redirect: true,\n        clickedDiary: tag\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.props.diaries.map(function (diary) {\n        // return <OneSavedDiary key={diary.date} oneDiary={diary} />\n        return {\n          value: diary.title,\n          count: Math.random() * 20,\n          diary: diary.diary,\n          date: diary.date,\n          key: diary.date,\n          userID: diary.userID,\n          id: diary.id\n        };\n      }); // let diaryCards = this.props.diaries.map((diary) => {\n      //   return <DiaryCard diary={diary} />\n      // })\n\n      if (this.state.redirect) {\n        // return <Redirect push to={'/ChosenDiary/' + this.state.clickedDiary.key}/>\n        return React.createElement(Redirect, {\n          push: true,\n          to: {\n            pathname: '/ChosenDiary/' + this.state.clickedDiary.id\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container mt-4\",\n        id: \"wordCloud\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(TagCloud, {\n        className: \"text-center\",\n        id: \"tagCloud\",\n        minSize: 1,\n        maxSize: 2,\n        tags: data,\n        onClick: function onClick(tag) {\n          return _this2.handleClick(tag);\n        },\n        shuffle: false,\n        renderer: function renderer(tag) {\n          return _this2.customRenderer(tag);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SavedDiaries;\n}(Component);\n\nexport default SavedDiaries;","map":{"version":3,"sources":["/Users/PhilipChoi/Desktop/milimili/src/SavedDiaries.js"],"names":["React","Component","Redirect","TagCloud","SavedDiaries","props","customRenderer","tag","size","color","value","animation","animationDelay","Math","random","fontSize","border","margin","padding","display","state","redirect","clickedDiary","console","log","clickUpdate","setState","data","diaries","map","diary","title","count","date","key","userID","id","pathname","handleClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Redirect } from 'react-router-dom';\nimport { TagCloud } from \"react-tagcloud\";\n\n\nclass SavedDiaries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n      clickedDiary: ''\n    }\n  }\n\n   customRenderer = (tag, size, color) => (\n    <span key={tag.value}\n          style={{\n            animation: 'blinker 3s linear infinite',\n            animationDelay: `${Math.random() * 2}s`,\n            fontSize: `${size}em`,\n            border: `2px solid ${color}`,\n            margin: '3px',\n            padding: '3px',\n            display: 'inline-block',\n            color: 'white',\n          }}>{tag.value}</span>\n  );\n\n  handleClick(tag) {\n    console.log(tag.value)\n    this.props.clickUpdate(tag);\n    this.setState({ redirect: true, clickedDiary: tag })\n  }\n\n  render() {\n    \n    let data = this.props.diaries.map((diary) => {\n      // return <OneSavedDiary key={diary.date} oneDiary={diary} />\n      return ({ value: diary.title, count: Math.random() * 20, diary: diary.diary, date: diary.date, key: diary.date, userID: diary.userID, id: diary.id});\n    })\n    // let diaryCards = this.props.diaries.map((diary) => {\n    //   return <DiaryCard diary={diary} />\n    // })\n\n    if (this.state.redirect) {\n      // return <Redirect push to={'/ChosenDiary/' + this.state.clickedDiary.key}/>\n      return <Redirect push to={{\n        pathname: '/ChosenDiary/' + this.state.clickedDiary.id\n      }} />\n\n    }\n\n    return (\n      <div>\n        < div className=\"container mt-4\" id=\"wordCloud\">\n        <TagCloud className=\"text-center\" id=\"tagCloud\" minSize={1}\n              maxSize={2}\n              tags={data}\n              onClick={(tag) => this.handleClick(tag)} \n              shuffle={false}\n              renderer={(tag) => this.customRenderer(tag)}\n              />\n              </div>\n      </div >\n    );\n  }\n}\n\n\n\nexport default SavedDiaries"]},"metadata":{},"sourceType":"module"}