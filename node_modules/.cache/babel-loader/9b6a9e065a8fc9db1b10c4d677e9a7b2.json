{"ast":null,"code":"import _assertThisInitialized from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/PhilipChoi/Desktop/milimili/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/PhilipChoi/Desktop/milimili/src/ChosenDiary.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from 'firebase/app';\nimport 'firebase/database'; // import Time from 'react-time'\n// import { Form } from 'reactstrap'\n\nimport { Redirect } from 'react-router-dom';\n\nvar ChosenDiary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChosenDiary, _Component);\n\n  function ChosenDiary(props) {\n    var _this;\n\n    _classCallCheck(this, ChosenDiary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChosenDiary).call(this, props));\n\n    _this.submitHandler = function (event) {\n      event.preventDefault();\n\n      if (window.confirm('정말로 지우시겠습니까?')) {\n        _this.props.removeDiary(_this.props.diary.id);\n      } // console.log(this.props.diary.key)\n\n\n      return React.createElement(Redirect, {\n        to: \"/SavedDiaries\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    };\n\n    _this.sharedRemovedHanler = function (event) {\n      event.preventDefault();\n\n      if (window.confirm('공유된 게시물을 정말로 지우시겠습니까?')) {\n        _this.props.removeMySharedDiary(_this.props.diary.id);\n      }\n    };\n\n    _this.savedHandler = function (event) {\n      event.preventDefault();\n\n      if (window.confirm('공유하시겠습니까?')) {\n        _this.props.shareDiary(_this.props.diary);\n      }\n    };\n\n    _this.state = {\n      redirect: false\n    };\n    return _this;\n  }\n\n  _createClass(ChosenDiary, [{\n    key: \"render\",\n    value: function render() {\n      var content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n\n      if (!this.props.diary.shared) {\n        content = React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-info\",\n          onClick: this.savedHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"\\uACF5\\uC720\\uD558\\uAE30\"), React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-danger m-3\",\n          onClick: this.submitHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"\\uC0AD\\uC81C\\uD558\\uAE30\")); //sharedDiaries section: if you click your own shared post\n      } else if (this.props.diary.userID === this.props.currentUser.uid) {\n        content = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(WriteComment, {\n          currentUser: this.props.currentUser,\n          diary: this.props.diary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }), React.createElement(CommentList, {\n          currentUser: this.props.currentUser,\n          diary: this.props.diary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-danger m-3\",\n          onClick: this.sharedRemovedHanler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"\\uC0AD\\uC81C\\uD558\\uAE30\"))); //sharedDiaries section: clicked on other post\n      } else {\n        console.log(\"before comment\");\n        console.log(this.props.diary);\n        content = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(WriteComment, {\n          currentUser: this.props.currentUser,\n          diary: this.props.diary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }), React.createElement(CommentList, {\n          currentUser: this.props.currentUser,\n          diary: this.props.diary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"jumbotron\",\n        style: {\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.props.diary.value), React.createElement(\"p\", {\n        id: \"diaryTitle\",\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.props.diary.diary), React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }))), content);\n    }\n  }]);\n\n  return ChosenDiary;\n}(Component);\n\nvar WriteComment =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(WriteComment, _Component2);\n\n  function WriteComment(props) {\n    var _this2;\n\n    _classCallCheck(this, WriteComment);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(WriteComment).call(this, props));\n\n    _this2.updateComment = function (event) {\n      event.preventDefault();\n\n      _this2.setState({\n        comment: event.target.value\n      });\n    };\n\n    _this2.onCommentSubmit = function (e) {\n      e.preventDefault(); //don't submit\n\n      /* TODO: add a new Chirp to the database */\n      // let propsUser = this.props.currentUser;\n\n      if (_this2.state.comment.length === 0) {\n        alert(\"댓글을 적어주세요!\");\n      } else if (_this2.state.comment.length > 100) {\n        alert(\"댓글은 100자 이내로 써주세요!\");\n      } else {\n        var color = _this2.getRandomColor();\n\n        firebase.database().ref(\"shared/diaries/\").child(_this2.props.diary.id).child(\"comments\").on(\"value\", function (snapshot) {\n          for (var key in snapshot.val()) {\n            if (snapshot.exists && snapshot.val()[key].userID === _this2.props.currentUser.uid) {\n              color = snapshot.val()[key].color;\n              console.log(color);\n            }\n          }\n        });\n        var newComment = {\n          userID: _this2.props.currentUser.uid,\n          text: _this2.state.comment,\n          time: firebase.database.ServerValue.TIMESTAMP,\n          color: color,\n          displayName: _this2.props.currentUser.displayName\n        };\n        console.log(\"commentsubmitted\");\n        console.log(_this2.state.comment); //.child(`${this.props.diary.userID}-${this.props.diary.date}`)\n\n        firebase.database().ref(\"shared/diaries/\").child(_this2.props.diary.id).child(\"comments\").push(newComment);\n\n        _this2.setState({\n          comment: ''\n        }); //empty out post for next time\n\n      }\n    };\n\n    _this2.state = {\n      comment: ''\n    };\n    _this2.updateComment = _this2.updateComment.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(WriteComment, [{\n    key: \"getRandomColor\",\n    value: function getRandomColor() {\n      var letters = 'BCDEF'.split('');\n      var color = '#';\n\n      for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * letters.length)];\n      }\n\n      return color;\n    }\n  }, {\n    key: \"render\",\n    //onKeyPress={this.handleKeyPress}\n    value: function render() {\n      console.log(\"for comment section\");\n      console.log(this.props.diary);\n      return React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"commentForm\",\n        onSubmit: this.onCommentSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control\",\n        value: this.state.comment,\n        id: \"textarea\",\n        name: \"text\",\n        rows: \"2\",\n        cols: \"80\",\n        type: \"text\",\n        placeholder: \"\\uD560\\uB9D0..\",\n        onChange: this.updateComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-light mb-5 ml-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"\\uC785\\uB825\")))));\n    }\n  }]);\n\n  return WriteComment;\n}(Component);\n\nvar CommentList =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(CommentList, _Component3);\n\n  function CommentList(props) {\n    var _this3;\n\n    _classCallCheck(this, CommentList);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(CommentList).call(this, props));\n\n    _this3.removeComment = function (commentKey) {\n      firebase.database().ref(\"shared/diaries/\").child(_this3.props.diary.id).child(\"comments\").child(commentKey).remove();\n    };\n\n    _this3.state = {\n      comments: []\n    };\n    return _this3;\n  }\n\n  _createClass(CommentList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      firebase.database().ref(\"shared/diaries/\").child(this.props.diary.id).child(\"comments\").on(\"value\", function (snapshot) {\n        console.log(snapshot.val());\n\n        if (snapshot.exists()) {\n          _this4.setState({\n            comments: snapshot.val()\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      firebase.database().ref('unregister').off();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      // let refComment = firebase.database().ref(`shared/diaries/${this.props.diary.userID}-${this.props.diary.date}/comments`)\n      // console.log(typeof(refComment))\n      var content = '';\n      console.log(\"comments\");\n      console.log(this.state.comments);\n\n      if (this.state.comments !== []) {\n        var commentKeys = Object.keys(this.state.comments); // console.log(chirpsKeys);\n\n        var commentObject = commentKeys.map(function (key) {\n          var commentObj = _this5.state.comments[key];\n          commentObj.id = key;\n          return commentObj;\n        });\n        content = commentObject.map(function (object) {\n          return React.createElement(SingleComment, {\n            removeComment: _this5.removeComment,\n            key: object.id,\n            comment: object,\n            currentUser: _this5.props.currentUser,\n            diary: _this5.props.diary,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222\n            },\n            __self: this\n          });\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, content);\n    }\n  }]);\n\n  return CommentList;\n}(Component);\n\nvar SingleComment =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(SingleComment, _Component4);\n\n  function SingleComment() {\n    var _getPrototypeOf2;\n\n    var _this6;\n\n    _classCallCheck(this, SingleComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this6 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SingleComment)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this6.removeComment = function () {\n      _this6.props.removeComment(_this6.props.comment.id);\n\n      console.log(_this6.props.comment.id);\n    };\n\n    return _this6;\n  }\n\n  _createClass(SingleComment, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.currentUser.uid);\n      console.log(this.props.diary.userID);\n      var comment = this.props.comment; //<span className=\"handle\">{comment.userName} </span>\n\n      var content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }); //others comment \n      //if comment's commenter's id is different that writer's id\n\n      var button = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      });\n\n      if (this.props.comment.userID === this.props.currentUser.uid) {\n        button = React.createElement(\"div\", {\n          className: \"col-1\",\n          id: \"removeComment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          id: \"oneCommentIn\",\n          onClick: this.removeComment,\n          className: \"btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, \"x\"));\n      }\n\n      if (this.props.comment.userID !== this.props.diary.userID) {\n        content = React.createElement(\"div\", {\n          className: \"container mb-3\",\n          id: \"commentContainerOther\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row p-3 py-2 border\",\n          id: \"oneComment\",\n          style: {\n            backgroundColor: this.props.comment.color\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-lg-2 col-md-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          id: \"oneCommentIn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }, this.props.comment.displayName)), React.createElement(\"div\", {\n          className: \"col pl-4 pl-lg-1 align-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, comment.text)), button)); //writer's comment\n      } else {\n        content = React.createElement(\"div\", {\n          className: \"container mb-3\",\n          id: \"commentContainerOwn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row p-3 py-2 bg-white border\",\n          id: \"ownComment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-lg-2 col-md-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          id: \"oneCommentIn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, this.props.comment.displayName)), React.createElement(\"div\", {\n          className: \"col pl-4 pl-lg-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, comment.text)), button));\n      }\n\n      console.log(document.getElementById('removeComment'));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, content);\n    }\n  }]);\n\n  return SingleComment;\n}(Component);\n\nexport default ChosenDiary;","map":{"version":3,"sources":["/Users/PhilipChoi/Desktop/milimili/src/ChosenDiary.js"],"names":["React","Component","firebase","Redirect","ChosenDiary","props","submitHandler","event","preventDefault","window","confirm","removeDiary","diary","id","sharedRemovedHanler","removeMySharedDiary","savedHandler","shareDiary","state","redirect","content","shared","userID","currentUser","uid","console","log","backgroundColor","value","WriteComment","updateComment","setState","comment","target","onCommentSubmit","e","length","alert","color","getRandomColor","database","ref","child","on","snapshot","key","val","exists","newComment","text","time","ServerValue","TIMESTAMP","displayName","push","bind","letters","split","i","Math","floor","random","CommentList","removeComment","commentKey","remove","comments","off","commentKeys","Object","keys","commentObject","map","commentObj","object","SingleComment","button","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n// import Time from 'react-time'\n\n// import { Form } from 'reactstrap'\n\nimport { Redirect } from 'react-router-dom';\n\n\nclass ChosenDiary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false\n    }\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    if (window.confirm('정말로 지우시겠습니까?')) {\n      this.props.removeDiary(this.props.diary.id);\n    }\n    // console.log(this.props.diary.key)\n    return <Redirect to='/SavedDiaries' />\n  }\n\n  sharedRemovedHanler = (event) => {\n    event.preventDefault();\n    if (window.confirm('공유된 게시물을 정말로 지우시겠습니까?')) {\n      this.props.removeMySharedDiary(this.props.diary.id);\n    }\n  }\n\n  savedHandler = (event) => {\n    event.preventDefault();\n    if (window.confirm('공유하시겠습니까?')) {\n      this.props.shareDiary(this.props.diary);\n    }\n  }\n\n  render() {\n    let content = <div></div>;\n    if (!this.props.diary.shared) {\n      content = (\n        <div className=\"text-center\">\n          <button type=\"submit\" className=\"btn btn-info\" onClick={this.savedHandler}>\n            공유하기\n        </button>\n          <button type=\"submit\" className=\"btn btn-danger m-3\" onClick={this.submitHandler}>\n            삭제하기\n        </button>\n        </div>\n      )\n\n      //sharedDiaries section: if you click your own shared post\n    } else if (this.props.diary.userID === this.props.currentUser.uid) {\n      content = (\n        <div>\n          <WriteComment currentUser={this.props.currentUser} diary={this.props.diary} />\n          <CommentList currentUser={this.props.currentUser} diary={this.props.diary} />\n          <div className=\"text-center\">\n            <button type=\"submit\" className=\"btn btn-danger m-3\" onClick={this.sharedRemovedHanler}>\n              삭제하기\n          </button>\n          </div>\n        </div>\n      )\n\n      //sharedDiaries section: clicked on other post\n    } else {\n      console.log(\"before comment\")\n      console.log(this.props.diary)\n      content = (\n        <div>\n          <WriteComment currentUser={this.props.currentUser} diary={this.props.diary} />\n          <CommentList currentUser={this.props.currentUser} diary={this.props.diary} />\n        </div>)\n    }\n    return (\n      <div>\n        <div className=\"container text-center\">\n          <div className=\"jumbotron\" style={{ backgroundColor: 'white' }}>\n            <h1 className=\"display-4\">{this.props.diary.value}</h1>\n            <p id =\"diaryTitle\" className=\"lead\">\n              {this.props.diary.diary}\n            </p>\n            <p className=\"lead\">\n            </p>\n          </div>\n        </div>\n\n        {/* <form className=\"myForm\"> */}\n        {content}\n        {/* </form> */}\n      </div>\n    );\n  }\n}\n\nclass WriteComment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comment: ''\n    }\n    this.updateComment = this.updateComment.bind(this)\n  }\n\n  updateComment = (event) => {\n    event.preventDefault();\n    this.setState({ comment: event.target.value });\n  }\n\n  getRandomColor() {\n             var letters = 'BCDEF'.split('');\n                var color = '#';\n                for (var i = 0; i < 6; i++ ) {\n                    color += letters[Math.floor(Math.random() * letters.length)];\n                }\n                return color;\n  }\n\n  onCommentSubmit = (e) => {\n    e.preventDefault(); //don't submit\n    /* TODO: add a new Chirp to the database */\n    // let propsUser = this.props.currentUser;\n    if(this.state.comment.length === 0){\n      alert(\"댓글을 적어주세요!\")\n    }else if(this.state.comment.length > 100){\n      alert(\"댓글은 100자 이내로 써주세요!\")\n    }else{\n    let color = this.getRandomColor();\n    firebase.database().ref(`shared/diaries/`).child(this.props.diary.id).child(\"comments\").on(\"value\", (snapshot) => {\n      for (let key in snapshot.val()) {\n        if (snapshot.exists && snapshot.val()[key].userID === this.props.currentUser.uid) {\n          color = snapshot.val()[key].color\n          console.log(color);\n        }\n      }\n    })\n    let newComment = {\n      userID: this.props.currentUser.uid,\n      text: this.state.comment,\n      time: firebase.database.ServerValue.TIMESTAMP,\n      color: color,\n      displayName: this.props.currentUser.displayName\n    }\n    console.log(\"commentsubmitted\")\n    console.log(this.state.comment)\n    //.child(`${this.props.diary.userID}-${this.props.diary.date}`)\n    firebase.database().ref(`shared/diaries/`).child(this.props.diary.id).child(\"comments\").push(newComment)\n    this.setState({ comment: '' }); //empty out post for next time\n  }\n  }\n\n  //onKeyPress={this.handleKeyPress}\n  render() {\n    console.log(\"for comment section\")\n    console.log(this.props.diary)\n    return (\n      <div className=\"text-center\">\n        <div className=\"container\">\n          <form className=\"commentForm\" onSubmit={this.onCommentSubmit}>\n            <textarea className=\"form-control\" value={this.state.comment} id=\"textarea\" name=\"text\" rows=\"2\" cols=\"80\" type=\"text\"\n              placeholder=\"할말..\" onChange={this.updateComment}></textarea>\n            <div className=\"text-right\">\n              <button type=\"submit\" className=\"btn btn-light mb-5 ml-2\">입력</button>\n            </div>\n          </form>\n          {/* <button className=\"btn btn-primary \">\n\n              입력\n                </button> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass CommentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: []\n    }\n  }\n  removeComment = (commentKey) => {\n    firebase.database().ref(`shared/diaries/`).child(this.props.diary.id).child(\"comments\").child(commentKey).remove();\n  }\n\n  componentDidMount() {\n    firebase.database().ref(`shared/diaries/`).child(this.props.diary.id).child(\"comments\").on(\"value\", (snapshot) => {\n      console.log(snapshot.val())\n      if (snapshot.exists()) {\n        this.setState({ comments: snapshot.val() })\n      }\n    })\n  }\n\n  componentWillMount() {\n    firebase.database().ref('unregister').off();\n  }\n  render() {\n    // let refComment = firebase.database().ref(`shared/diaries/${this.props.diary.userID}-${this.props.diary.date}/comments`)\n    // console.log(typeof(refComment))\n    let content = '';\n    console.log(\"comments\")\n    console.log(this.state.comments)\n    if (this.state.comments !== []) {\n      let commentKeys = Object.keys(this.state.comments)\n      // console.log(chirpsKeys);\n      let commentObject = commentKeys.map((key) => {\n        let commentObj = this.state.comments[key];\n        commentObj.id = key;\n        return commentObj;\n      })\n      content = commentObject.map((object) => {\n        return (<SingleComment removeComment ={this.removeComment}key={object.id} comment={object} currentUser={this.props.currentUser} diary={this.props.diary} />)\n      })\n    }\n    return (\n      <div>\n        {content}\n      </div>);\n  }\n}\n\n\nclass SingleComment extends Component {\n  removeComment = () => {\n    this.props.removeComment(this.props.comment.id);\n    console.log(this.props.comment.id)\n  }\n\n  render() {\n    console.log(this.props.currentUser.uid)\n    console.log(this.props.diary.userID)\n    let comment = this.props.comment;\n    //<span className=\"handle\">{comment.userName} </span>\n    let content = <div></div>\n    //others comment \n    //if comment's commenter's id is different that writer's id\n    let button = <div></div>;\n    if(this.props.comment.userID === this.props.currentUser.uid){\n      button = (<div className=\"col-1\" id=\"removeComment\">\n      <button id=\"oneCommentIn\" onClick={this.removeComment} className=\"btn\">\n        x\n      </button>\n    </div>)\n    }\n    if (this.props.comment.userID !== this.props.diary.userID) {\n      content = (\n        <div className=\"container mb-3\" id=\"commentContainerOther\">\n          <div className=\"row p-3 py-2 border\" id=\"oneComment\" style={{ backgroundColor: this.props.comment.color }}>\n            <div className=\"col-lg-2 col-md-3\">\n              <p id=\"oneCommentIn\">\n                {this.props.comment.displayName}\n        </p>\n            </div>\n            <div className=\"col pl-4 pl-lg-1 align-center\">\n              {/* <span className=\"time\"><Time value={comment.time} relative/></span> */}\n              <div>{comment.text}</div>\n            </div>\n            {button}\n          </div>\n        </div>)\n      //writer's comment\n       } else {\n      content = (\n        <div className=\"container mb-3\" id=\"commentContainerOwn\">\n          <div className=\"row p-3 py-2 bg-white border\" id=\"ownComment\">\n            <div className=\"col-lg-2 col-md-3\">\n              <p id=\"oneCommentIn\">\n                {this.props.comment.displayName}\n            </p>\n            </div>\n            <div className=\"col pl-4 pl-lg-1\">\n              {/* <span className=\"time\"><Time value={comment.time} relative/></span> */}\n              <div>{comment.text}</div>\n            </div>\n              {button}\n          </div>\n        </div>\n      )\n    }    \n    console.log(document.getElementById('removeComment'))\n    return (\n      <div>\n        {content}\n        \n      </div>\n    )\n  }\n}\n\n\nexport default ChosenDiary"]},"metadata":{},"sourceType":"module"}